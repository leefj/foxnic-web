#(authorAndTime)
 layui.use(['form', 'table', 'util', 'settings', 'admin', 'upload','foxnic'], function () {
        var form = layui.form;
        var table = layui.table;
        var settings = layui.settings;
        var layer = layui.layer;
        var util = layui.util;
        var admin = layui.admin;
        var fox = layui.foxnic;
        //上传
        var upload = layui.upload;
 
        #if(isTree) 
        // 树形结构记录当前上级节点ID
        var #(parentIdVar) = #(rootId);
        var navStack=[[0,fox.translate("根节点")]];
        #end
        
        //模块基础路径
        var moduleURL="#(moduleURL)";
 
        // 渲染表格
        fox.renderTable({
        	elem: '##(tableId)',
            url: moduleURL +'/query-paged-list',
            #if(isTree) 
            //树形结构需要传递相关参数
            where: { #(parentIdVar) : #(parentIdVar) } ,
            #end
			cols: [[
			 	{ type:'checkbox' },
                { type: 'numbers' },
                #for(f : fields)
                { field: '#(f.varName)', sort: true, title: fox.translate('#(f.label)')#(f.templet) } ,
                #end
                { fixed: 'right', align: 'center', toolbar: '##(operationTemplateId)', title: fox.translate('操作'), width: 175 }
            ]]
        });
        
        //绑定 Switch 切换事件
        #for(f : fields)
        #if(f.isLogicField)
        fox.bindSwitchEvent("cell-tpl-#(f.varName)",moduleURL +'/update',function(r){});
        #end
        #end
        
        #if(isTree) 
        //导航刷新函数
        function refreshNav() {
        	$("#tree-nav").empty();
			for (var i=0;i<navStack.length;i++) {
				var last=i==navStack.length-1;
	            $("#tree-nav").append("<a href='javascript:' class='nav-node' index='"+i+"'>"+navStack[i][1]+"</a>")
	            if(!last) {
	            	$("#tree-nav").append('<span lay-separator="">/</span>');
	            }
			}
			//点击事件
			$(".nav-node").click(function(it){
				it=$(this);
				//倒换
				var z=it.attr('index');
				var tmp=[];
				for (var i=0;i<=z;i++) {
					//debugger;
					tmp.push(navStack[i]);
				}
				navStack=tmp;
				#(parentIdVar)=navStack[navStack.length-1][0];
				resetSearchFields();
				//
				refreshTableData();
				refreshNav();
			});
        }
        
        //初始化导航
        refreshNav();
        #end
       
       //重置搜索框
       function resetSearchFields() {
        	$('#label-search-field').val("");
			$('#label-search-value').val("");
			layui.form.render();
        }
 
        function refreshTableData() {
        	var field = $('##(searchFieldId)').val();
            var value = $('##(searchValueInputId)').val();
            var ps={searchField: field, searchValue: value};
            #if(isTree) 
            // 树形结构锁定上级ID
            ps.#(parentIdVar)=#(parentIdVar);
            #end
            table.reload('#(tableId)', { where : ps });
        }
        
        //添加按钮点击事件
        $('##(addButtonId)').click(function () {
        	//设置新增是初始化数据
        	var data={};
        	#if(isTree) 
        	data.#(parentIdVar)=#(parentIdVar);
        	#end
            showEditModel(data);
        });

        // 工具条点击事件
        table.on('tool(#(tableId))', function (obj) {
            var data = obj.data;
            var layEvent = obj.event;

            if (layEvent === 'edit') { // 修改
            	admin.req(moduleURL+"/get-by-id", { #(paramJson) }, function (data) {
            		if(data.success) {
            			 showEditModel(data.data);
            		} else {
            			 layer.msg(data.message, {icon: 1, time: 500});
            		}
            	});
            	
            } else if (layEvent === 'del') { // 删除
                layer.confirm(fox.translate('确定删除此')+fox.translate('#(topic)')+fox.translate('吗？'), function (i) {
                    layer.close(i);
                    layer.load(2);
                    admin.req(moduleURL+"/delete", { #(paramJson) }, function (data) {
                        layer.closeAll('loading');
                        if (data.success) {
                            layer.msg(data.message, {icon: 1, time: 500});
                            refreshTableData();
                        } else {
                            layer.msg(data.message, {icon: 2, time: 500});
                        }
                    });
                });
            }  #if(isTree)else if (layEvent === 'drill') {
            	#(parentIdVar) = data.#(idVar);
            	navStack.push([data.id,data.label]);
            	resetSearchFields();
            	refreshTableData();
            	refreshNav();
            } #end
        });

        //显示表单弹窗
        var showEditModel = function (data) {
 
            admin.putTempData('#(formDataKey)', data);
            var title = (data && data.#(idVar)) ? (fox.translate('修改')+fox.translate('#(topic)')) : (fox.translate('添加')+fox.translate('#(topic)'));
            admin.popupCenter({
                title: title,
                path: '#(formPath)',
                finish: function () {
                    refreshTableData();
                }
            });
        };
        
        
        //回车键查询
        $("##(searchValueInputId)").keydown(function(event) {
        	if(event.keyCode !=13) return;
		  	refreshTableData();
        });

        // 搜索按钮点击事件
        $('##(searchButtonId)').click(function () {
           refreshTableData();
        });
        
        
        #if(isSinglePK)
        //批量删除按钮点击事件
        $('##(deleteButtonId)').click(function () {
          
            var ids=getCheckedList("#(idVar)");
            if(ids.length==0) {
            	layer.msg(fox.translate('请选择需要删除的')+fox.translate('#(topic)')+"!");
            	return;
            }
 
            //调用批量删除接口
			layer.confirm(fox.translate('确定删除已选中的')+fox.translate('#(topic)')+fox.translate('吗？'), function (i) {
                    layer.close(i);
                    layer.load(2);
                    admin.req(moduleURL+"/batch-delete", JSON.stringify({ #(idVar): JSON.stringify(ids) }), function (data) {
                        layer.closeAll('loading');
                        if (data.success) {
                            layer.msg(data.message, {icon: 1, time: 500});
                            refreshTableData();
                        } else {
                            layer.msg(data.message, {icon: 2, time: 500});
                        }
                    });
			});
 
        });
        #end
  
        //获得已经选中行的数据,不传入 field 时，返回所有选中的记录，指定 field 时 返回指定的字段集合
		function getCheckedList(field) {
			var checkStatus = table.checkStatus('#(tableId)');
			var data = checkStatus.data;
			if(!field) return data;
			for(var i=0;i<data.length;i++) data[i]=data[i][field];
			return data;
		}
 
        
       

    });