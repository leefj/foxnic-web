package org.github.foxnic.web.framework.licence;

import com.alibaba.fastjson.JSONObject;
import com.github.foxnic.commons.log.Logger;
import com.github.foxnic.springboot.CP;

import java.lang.reflect.Method;

public class LicenceProxy {

    public static Object KE = null;
    public static Method KEM = null;
    public static Object LO = null;
    public static String LICENCE_DATA = null;
    public static String VnV_CODE=null;
    public static Long VnV_TICK=0L;
	public static String SN = "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";

    public static void reset() {
        try {
            CP.getInstance().reset();
        } catch (Exception e) {
            Logger.error("许可证重置失败",e);
        }
    }

    public static JSONObject getLicence() {
        try {
            return CP.getInstance().getConfig();
        } catch (Exception e) {
            Logger.error("许可读取置失败",e);
            return null;
        }
    }

    /**
     * 获得模块配置，建议把这个方法拷贝到自己的模块去
     * */
    public static JSONObject getModuleConfig(String code) {
        if(LicenceProxy.KE==null || LicenceProxy.KEM==null) return null;
        try {
            return  (JSONObject)LicenceProxy.KEM.invoke(LicenceProxy.KE,code);
        } catch (Exception e) {
            Logger.error("许可读模块取置失败",e);
            return null;
        }
    }


}